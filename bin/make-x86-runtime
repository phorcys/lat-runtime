#!/usr/bin/bash
######################################################################
# @author      : Xiaotian Wu (yetist@gmail.com)
# @file        : run
# @created     : 星期三 10月 25, 2023 21:13:04 CST
#
# @description :
######################################################################
set -e

_DEVTOOLS_LIBRARY_DIR=${_DEVTOOLS_LIBRARY_DIR:-/usr/share/devtools}
source "${_DEVTOOLS_LIBRARY_DIR}"/lib/common.sh

SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )
TOP_DIR=$( dirname $SCRIPT_DIR )
TODAY=$(date +%Y%m%d)
ROOTFS_DIR=$TOP_DIR/archlinux-rootfs
RUNTIME_DIR=$TOP_DIR/lat-runtime
X86_NAME=lat-i386
X64_NAME=lat-x86_64
RUNTIME_X86_DIR=$RUNTIME_DIR/$X86_NAME
RUNTIME_X64_DIR=$RUNTIME_DIR/$X64_NAME

# custom packages
CUSTOM_PKGS=(lib32-mesa mesa)

pkg_64_only_lst=(
glfw
gst-plugins-bad-libs
gst-plugins-ugly
gst-plugins-base
gst-plugins-good
gst-plugins-bad
gst-plugin-va
gst-plugin-gtk
gst-plugin-qsv
gst-plugin-wpe
gst-libav
gstreamer-vaapi
libibus
samba
sndio
)

pkg_64_lst=(
acl
alsa-lib
at-spi2-core
brotli
bzip2
cairo
clang
colord
curl
dbus
e2fsprogs
expat
flac
fontconfig
freetype2
fribidi
gcc-libs
gdk-pixbuf2
gettext
glew
glew1.10
glib2
glibc
gmp
gnutls
gst-plugins-base-libs
gst-plugins-good
gstreamer
gtk2
gtk3
harfbuzz
icu
keyutils
krb5
lcms2
libaio
libasyncns
libcanberra
libcap
libcups
libcurl-gnutls
libdatrie
libdecor
libdrm
libelf
libepoxy
libffi
libgcrypt
libglvnd
libgpg-error
libice
libidn2
libjpeg-turbo
libldap
libltdl
libnl
libogg
libpcap
libpciaccess
libpipewire
libpng
libpsl
libpulse
librsvg
libsm
libsndfile
libssh2
libtasn1
libthai
libtiff
libtirpc
libunistring
libunwind
libva
libva-mesa-driver
libvdpau
libvorbis
libwebp
libx11
libxau
libxcb
libxcomposite
libxcrypt
libxcursor
libxdamage
libxdmcp
libxext
libxfixes
libxft
libxi
libxinerama
libxkbcommon
libxml2
libxrandr
libxrender
libxshmfence
libxss
libxtst
libxv
libxxf86vm
llvm
llvm-libs
lm_sensors
mangohud
mesa
mesa-utils
mesa-vdpau
ncurses
nettle
nspr
nss
openal
opencl-clover-mesa
opencl-rusticl-mesa
openssl
openssl-1.1
opus
orc
p11-kit
pam
pango
pcre2
pixman
sdl2
sdl12-compat
sdl2_image
sdl2_ttf
spirv-llvm-translator
spirv-tools
systemd
tdb
util-linux
vulkan-icd-loader
vulkan-intel
vulkan-mesa-layers
vulkan-radeon
vulkan-swrast
vulkan-virtio
wayland
xcb-util-keysyms
xz
zlib
zstd
)

pkg_32_lst=(
  lib32-rust-libs
)

# start main
for i in ${pkg_64_lst[@]}; do
  pkg_32_lst+=("lib32-$i");
done
for i in ${pkg_64_only_lst[@]}; do
  pkg_64_lst+=("$i");
done

echo "begin make lat-runtime at $ROOTFS_DIR"

mkdir -p $ROOTFS_DIR/var/lib/pacman
mkdir -p $ROOTFS_DIR/usr/bin/
mkdir -p $ROOTFS_DIR/{proc,sys,dev}
if ! mountpoint $ROOTFS_DIR/proc >/dev/null; then
  sudo mount --bind /proc $ROOTFS_DIR/proc
fi

if ! mountpoint $ROOTFS_DIR/sys >/dev/null; then
  sudo mount --bind /sys $ROOTFS_DIR/sys
fi

if ! mountpoint $ROOTFS_DIR/dev >/dev/null; then
  sudo mount --bind /dev $ROOTFS_DIR/dev
fi

# register static-link lat-x86_64-static binfmt
if [ ! -f /usr/bin/lat-x86_64-static ]; then
  # since lat-1.5.0, lat-x86_64 is dynamic link ELF,
  # we must use static-link lat-x86_64-static in chroot environment.
  sudo cp ${TOP_DIR}/bin/lat-x86_64-static /usr/bin/lat-x86_64-static
fi

if ! grep 'x86_64-static' /usr/lib/binfmt.d/lat-x86_64*.conf >/dev/null; then
  sudo sed -i 's/x86_64/x86_64-static/g' /usr/lib/binfmt.d/lat-x86_64*.conf
  sudo systemctl restart systemd-binfmt.service
fi
sudo cp /usr/bin/lat-x86_64-static $ROOTFS_DIR/usr/bin/

if [ ! -f $ROOTFS_DIR/usr/bin/wine ]; then
  sudo pacman -Sy --noconfirm --config ${TOP_DIR}/conf/pacman.conf --root $ROOTFS_DIR ${pkg_32_lst[@]} ${pkg_64_lst[@]} wine
fi

msg "Update custom packages in rootfs..."
if [ ! -d $TOP_DIR/packages ]; then
  mkdir -p $TOP_DIR/packages
fi

pkgs=(`find $TOP_DIR/packages -name "*.pkg.tar.zst"`)
if [ ${#pkgs[@]} -gt 0 ]; then
  sudo pacman -U --noconfirm --config ${TOP_DIR}/conf/pacman.conf --root $ROOTFS_DIR ${pkgs[@]}
else
  for pkgname in ${CUSTOM_PKGS[@]}; do
      if [ ! -d $TOP_DIR/packages/${pkgname} ];then
        git clone https://gitlab.archlinux.org/archlinux/packaging/packages/${pkgname}.git $TOP_DIR/packages/${pkgname}
      fi
      echo "*******************************************************************"
      echo "$ #Dont forget to rebuild ${pkgname} for x86_64 Archlinux"
      echo "$ cd $TOP_DIR/packages/${pkgname}"
      echo "$ $TOP_DIR/bin/arch-x86_64-build"
      echo "$ sudo pacman -U --root  $ROOTFS_DIR packages/${pkgname}/*.pkg.tar.zst"
      echo "*******************************************************************"
      sleep 5
  done
fi

msg "Create lat runtime..."
# i386
sudo rm -rf $RUNTIME_X86_DIR
mkdir -p $RUNTIME_X86_DIR/usr/bin
mkdir -p $RUNTIME_X86_DIR/usr/share

sudo cp -a $ROOTFS_DIR/usr/lib32 $RUNTIME_X86_DIR/usr
sudo rm -rf $RUNTIME_X86_DIR/usr/lib32/locale
sudo rm -rf $RUNTIME_X86_DIR/usr/lib32/wine

sudo ln -sf /usr/lib/locale $RUNTIME_X86_DIR/usr/lib32/locale
sudo ln -sf usr/lib32 $RUNTIME_X86_DIR/lib
sudo ln -sf ../../$X64_NAME/usr/lib $RUNTIME_X86_DIR/usr/lib

# /usr/bin
sudo cp $ROOTFS_DIR/usr/bin/glxgears32 $RUNTIME_X86_DIR/usr/bin/
sudo cp $ROOTFS_DIR/usr/bin/glxinfo32 $RUNTIME_X86_DIR/usr/bin/
sudo cp /usr/bin/ldd $RUNTIME_X86_DIR/usr/bin/
sudo sed -i 's!^RTLDLIST.*!RTLDLIST="/usr/gnemul/'$X86_NAME'/usr/lib32/ld-linux.so.2"!' $RUNTIME_X86_DIR/usr/bin/ldd

# /usr/share
sudo cp -a $ROOTFS_DIR/usr/share/vulkan $RUNTIME_X86_DIR/usr/share/

# x86_64
sudo rm -rf $RUNTIME_X64_DIR
mkdir -p $RUNTIME_X64_DIR/usr/bin
mkdir -p $RUNTIME_X64_DIR/usr/share

sudo cp -a $ROOTFS_DIR/usr/lib $RUNTIME_X64_DIR/usr
sudo rm -rf $RUNTIME_X64_DIR/usr/lib/locale
sudo rm -rf $RUNTIME_X64_DIR/usr/lib/wine

sudo ln -sf /usr/lib/locale $RUNTIME_X64_DIR/usr/lib/locale
sudo ln -sf usr/lib $RUNTIME_X64_DIR/lib64
sudo ln -sf ../../$X86_NAME/usr/lib32 $RUNTIME_X64_DIR/usr/lib32
sudo ln -sf /usr/share/terminfo $RUNTIME_X64_DIR/usr/lib/terminfo

# /usr/bin
sudo cp $ROOTFS_DIR/usr/bin/glxinfo $RUNTIME_X64_DIR/usr/bin/
sudo cp $ROOTFS_DIR/usr/bin/glxgears $RUNTIME_X64_DIR/usr/bin/
if [ ! -f /usr/bin/busybox ]; then
    sudo pacman -Sy --noconfirm --config ${TOP_DIR}/conf/pacman.conf busybox
else
    sudo cp /usr/bin/busybox $RUNTIME_X64_DIR/usr/bin/
fi
sudo cp /usr/bin/ldd $RUNTIME_X64_DIR/usr/bin/
sudo sed -i 's!^RTLDLIST.*!RTLDLIST="/usr/gnemul/'$X64_NAME'/usr/lib/ld-linux-x86-64.so.2"!' $RUNTIME_X64_DIR/usr/bin/ldd

# /usr/share
sudo cp -a $ROOTFS_DIR/usr/share/vulkan $RUNTIME_X64_DIR/usr/share/

# restore current lat-x86_64 binfmt
if [ -f /usr/bin/lat-x86_64-static ]; then
  # since lat-1.5.0, lat-x86_64 is dynamic link ELF,
  # but we use static-link lat-x86_64-static in chroot environment.
  # here we restore the system lat-x86_64 binfmt register
  sudo rm -f /usr/bin/lat-x86_64-static
fi
if grep 'x86_64-static' /usr/lib/binfmt.d/lat-x86_64*.conf >/dev/null; then
  sudo sed -i 's/x86_64-static/x86_64/g' /usr/lib/binfmt.d/lat-x86_64*.conf
  sudo systemctl restart systemd-binfmt.service
fi

# compress runtime
cd $RUNTIME_DIR
msg "Compress runtime..."
msg2 "Creating ${X86_NAME}-${TODAY}.tar.zst ..."
sudo tar --zstd -cf ${TOP_DIR}/${X86_NAME}-${TODAY}.tar.zst ${X86_NAME}
msg2 "Creating ${X64_NAME}-${TODAY}.tar.zst ..."
sudo tar --zstd -cf ${TOP_DIR}/${X64_NAME}-${TODAY}.tar.zst ${X64_NAME}
